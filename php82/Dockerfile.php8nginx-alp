FROM php:8.2-fpm-alpine

# install devel library
RUN apk update && apk add --no-cache sudo zip libzip-dev \
    nginx libxml2-dev icu-dev curl \
    $PHPIZE_DEPS openssl-dev

RUN apk add oniguruma-dev

# install php library
RUN apk add --no-cache freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev && \
  docker-php-ext-configure gd \
    --with-freetype=/usr/include/ \
    --with-jpeg=/usr/include/ && \
  NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
  docker-php-ext-install -j${NPROC} gd && \
  apk del --no-cache freetype-dev libpng-dev libjpeg-turbo-dev

RUN docker-php-source extract \
    && docker-php-ext-install pdo pdo_mysql mysqli mbstring xml zip intl soap bcmath exif opcache \
    && docker-php-source delete

# install sqlserver and mongodb
RUN apk add unixodbc-dev 
RUN pecl install sqlsrv pdo_sqlsrv mongodb
RUN docker-php-ext-enable sqlsrv pdo_sqlsrv mongodb

#COMPOSER
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN apk add vim

# Configure nginx
#COPY cfg/nginx.conf /etc/nginx/nginx.conf
COPY cfg/nginx-server.conf /etc/nginx/http.d/default.conf

# Configure PHP-FPM
#COPY cfg/fpm-pool.conf /usr/local/etc/php/php-fpm.d/www.conf
#COPY cfg/php-nginx.ini /usr/local/etc/php/conf.d/custom.ini

# setup supervisor
# COPY cfg/supervisord.conf /etc/supervisord.conf

# copy entrypoint files
COPY cfg/entrypoint.sh /etc/entrypoint.sh
RUN chmod +x /etc/entrypoint.sh

# Add application
WORKDIR /var/www/html
RUN mkdir -p /var/www/html/app/public
RUN echo '<?php phpinfo(); ?>' >> /var/www/html/app/public/index.php

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
#RUN chown -R nobody.nobody /var/www/html && \
#  chown -R nobody.nobody /run && \
#  chown -R nobody.nobody /var/lib/nginx && \
#  chown -R nobody.nobody /var/log/nginx

# Switch to use a non-root user from here on
#USER nobody

EXPOSE 80

ENTRYPOINT ["/etc/entrypoint.sh"]

# run supervisord
# CMD ["/usr/bin/supervisord"]

# Configure a healthcheck to validate that everything is up&running
# HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8080/fpm-ping