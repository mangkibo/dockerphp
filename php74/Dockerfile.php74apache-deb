FROM php:7.4-apache

# set default timezone
ENV TZ=Asia/Jakarta
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone 
RUN date

# setup environment
ENV ACCEPT_EULA=Y

# install application dependency
RUN apt-get update  && \
	apt-get install curl -y && \
    apt-get install zip -y && \
    apt-get install libxml2-dev -y 

# enable apache rewrite mode
RUN a2enmod rewrite && a2enmod headers

#install composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
RUN chmod +x /usr/bin/composer

# install PHP extension 
RUN apt-get install -y \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libpng-dev \
        libonig-dev \
        libzip-dev \
    && docker-php-ext-install -j$(nproc) iconv \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd

# install SQL Server Driver
RUN apt-get update \
    && apt-get install -y gnupg2 \
    && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list \
    && apt-get install -y --no-install-recommends \
      locales \
        apt-transport-https \
    && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
    && locale-gen

RUN apt-get update \
    && apt-get -y --no-install-recommends install \
        unixodbc unixodbc-dev \
        msodbcsql17

RUN pecl install sqlsrv pdo_sqlsrv mongodb
#RUN docker-php-ext-enable sqlsrv pdo_sqlsrv mongodb
RUN echo "extension=pdo_sqlsrv.so" >> `php --ini | grep "Scan for additional .ini files" | sed -e "s|.*:\s*||"`/10_pdo_sqlsrv.ini
RUN echo "extension=sqlsrv.so" >> `php --ini | grep "Scan for additional .ini files" | sed -e "s|.*:\s*||"`/00_sqlsrv.ini
RUN docker-php-ext-enable mongodb
# install sql server lib end

RUN docker-php-source extract \
    && docker-php-ext-install pdo pdo_mysql mysqli mbstring xml zip intl soap bcmath \
    && docker-php-source delete

# download cert
RUN curl --remote-name --time-cond cacert.pem https://curl.se/ca/cacert.pem
RUN mv cacert.pem /usr/local/lib/cacert.pem

# copy custom php.ini
COPY cfg/php.ini /usr/local/etc/php/php.ini 

# setting up projects
RUN mkdir /var/www/html/app
WORKDIR /var/www/html/app
RUN mkdir public
RUN echo "<?php phpinfo(); ?>" >> /var/www/html/app/public/index.php

# ============ copy default configuration of apache =================
COPY cfg/default.conf /etc/apache2/sites-available/000-default.conf

# remove bash
RUN apt-get autoremove --purge bash -y --allow-remove-essential

# clean up junk
RUN apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*

# expose port
EXPOSE 80

# start supervisor
CMD /usr/sbin/apache2ctl -D FOREGROUND
